@forward "colors";
@use "colors";
@use "sass:meta";
@use "sass:list";
@use "sass:color";


$font-1: "Hack", monospace;


@mixin get-hover-transition($properties, $duration: .2s, $type: ease-out)
{
    @if (meta.type-of($properties) != list)
    {
        transition: $properties $duration $type;
    }
    @else
    {
        $transition-vals: ();
        @each $prop in $properties
        {
            $transition-val: $prop $duration $type;
            $transition-vals: list.append($transition-vals, $transition-val, "comma");
        }

        transition: $transition-vals;
    }
}


*
{
    margin: 0;
    padding: 0;
    border: none;
    box-sizing: border-box;
    font-family: inherit;
    user-select: none;
    outline: none;
}


html, body
{
    height: 100%;
    background-color: colors.get("darkgray");
}


body
{
    color: colors.get("off-white");
    font-family: $font-1;
    display: flex;
    flex-direction: column;
}


button
{
    background-color: transparent;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;

    img, svg
    {
        //width: 100%;
        height: 100%;
    }
}


select, input[type="submit"]
{
    padding: 5px 3px;
    border-radius: 7px;
    cursor: pointer;
}