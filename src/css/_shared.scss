@forward "colors";
@use "colors";


$font-1: "gg sans Medium Regular", sans-serif;


@mixin get-hover-transition($properties: [], $duration: .06s, $type: ease-in)
{
    @debug $properties;
    @if not $properties and not length($properties) < 2
    {
        transition: properties[0] $duration $type;
    }
    @else
    {
        transition: properties[0] $duration $type;
    }
}


*
{
    margin: 0;
    padding: 0;
    border: none;
    box-sizing: border-box;
    font-family: inherit;
}


html, body
{
    height: 100%;
    background-color: colors.get("darkgray");
}


body
{
    color: colors.get("offwhite");
    font-family: $font-1;
    display: flex;
    flex-direction: column;
}


button
{
    background-color: transparent;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;

    img, svg
    {
        height: 100%;
        width: 100%;
    }
}


select, input[type="submit"]
{
    background-color: colors.get("white");
    padding: 5px 3px;
    min-width: 200px;
    border-radius: 3px;
    cursor: pointer;
}


form
{
    padding: 0 20px;
    color: colors.get("off-white");
    background-color: colors.get("darkgray");
    width: 100%;
    height: 100%;
    //flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    .form-row
    {
        p#form-instructions
        {
            margin-bottom: 3px;
            width: 100%;
        }

        input[type=submit]
        {
            margin-top: 20px;
            background-color: transparent;
            color: colors.get("cyan");
            border: 1px solid colors.get("cyan");
            @include get-hover-transition(background-color);
            @include get-hover-transition(color);
            @include get-hover-transition(border-color);

            &:hover
            {
                background-color: colors.get("pink");
                border-color: colors.get("pink");
                color: colors.get("darkgray");
            }
        }
    }
}