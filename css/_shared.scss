@forward "colors";
@use "colors";
@use "sass:meta";
@use "sass:list";
@use "sass:color";


$font-1: "Hack", monospace;


@mixin get-hover-transition($properties, $duration: .15s, $type: ease-out)
{
    @if (meta.type-of($properties) != list)
    {
        transition: $properties $duration $type;
    }
    @else
    {
        $transition-vals: ();
        @each $prop in $properties
        {
            $transition-val: $prop $duration $type;
            $transition-vals: list.append($transition-vals, $transition-val, "comma");
        }

        transition: $transition-vals;
    }
}


@mixin add-rainbow()
{
    border: 2px solid;
    --angle: 0deg;
    border-image: conic-gradient(from var(--angle), red, yellow, lime, aqua, blue, magenta, red) 20%;
    animation: 2s rotate linear infinite;
}


*
{
    margin: 0;
    padding: 0;
    border: none;
    box-sizing: border-box;
    font-family: inherit;
    user-select: none;
    outline: none;
}


html, body
{
    height: 100%;
    background-color: colors.get("darkgray");
}


body
{
    color: colors.get("off-white");
    font-family: $font-1;
    display: flex;
    flex-direction: column;
}


select
{
    padding: 5px 3px;
    border-radius: 7px;
    cursor: pointer;
}


main
{
    background-color: colors.get("darkgray");
    width: 100%;
    //min-height: 100%;
    height: 100%;
    padding: 0 30px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    &.disabled
    {
        display: none;
    }

    div.row
    {
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
    }
}


button
{
    background-color: transparent;
    cursor: pointer;


    &:has(svg)
    {
        display: flex;
        justify-content: center;
        align-items: center;

        img, svg
        {
            min-width: 100%;
            min-height: 100%;
        }
    }


    &.large-button
    {
        width: 185px;
        margin-top: 21px;
        color: colors.get("cyan");
        border: 1px solid colors.get("cyan");
        border-radius: 7px;
        padding: 7px 20px;
        text-transform: uppercase;
        letter-spacing: 1px;
        opacity: .7;
        @include get-hover-transition(opacity);

        &:disabled
        {
            //$disabled-color: color.scale(colors.get("cyan"), $saturation: -70%);
            cursor: default;
            border-color: colors.get("cyan-disabled");
            color: colors.get("cyan-disabled");
        }

        &:not(:disabled):hover
        {
            opacity: 1;
            border-color: colors.get("cyan");
            color: colors.get("cyan");
        }
    }
}
